server.servlet.context-path=/aws/api/v0
server.port=8081
#jdbc:postgresql://devadb01.cch1vnvukezk.ap-south-1.rds.amazonaws.com:5432/SpringbootEcommerceDb
spring.datasource.url=${POSTGRES_DB_URL:}
spring.datasource.username=${POSTGRES_DB_USERNAME:}
spring.datasource.password=${POSTGRES_DB_PASSWORD:}
spring.jpa.show-sql=true
spring.redis.host=${REDIS_HOST:}
spring.redis.port=${REDIS_PORT:6379}
spring.cache.redis.use-key-prefix=true
aws.region=${AWS_REGION:us-east1}
aws.accesskey=${AWS_ACCESS_KEY:access1}
aws.secretkey=${AWS_SECRET_KEY:scret1}
aws.s3.bucket.upload=${AWS_S3_BUCKET_UPLOOAD:aabnc}
aws.sqs.queue.name=${AWS_SQS_QUEUE_NAME:sqs}
aws.sqs.queue.url=${AWS_SQS_QUEUE_URL:url}
aws.elasticcache.host=${AWS_ELASTIC_REDIS_HOST:host}
aws.elasticcache.port=${AWS_ELASTIC_REDIS_PORT:host}
aws.elasticcache.username=${AWS_ELASTIC_REDIS_USERNAME:host}
aws.elasticcache.password=${AWS_ELASTIC_REDIS_PASSWORD:host}
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database=postgresql
spring.jpa.generate-ddl=true
spring.swagger.enable=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update